{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototype","PropTypes","string","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.883b408e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">{props.aboutText}</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.aboutText}</a>\r\n              </li>\r\n     \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.Mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title:PropTypes.string,\r\n    aboutText:PropTypes.string\r\n}\r\n\r\n// Navbar.defaultProps={\r\n//     title:'set',   \r\n//     aboutText:'set about'\r\n// }","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick =()=>\r\n  {\r\n    // console.log(\"upper case was clicked\"+text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to uppercase !\",\"success\");\r\n  }\r\n  const handleLoClick =()=>\r\n  {\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to lowercase !\",\"success\");\r\n  }\r\n  const handleClearClick =()=>\r\n  {\r\n    let newText=\"   \";\r\n    setText(newText);\r\n    props.showAlert(\"text cleared !\",\"success\");\r\n  }\r\n  const handleOnChange =(event)=>{\r\n    // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleExtraSpaces=()=>{\r\n    let newText =text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"extra spaces are removed !\",\"success\");\r\n  }\r\n  const handleCopy=()=>\r\n  {\r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"text copied !\",\"success\");\r\n  }\r\nconst [text,setText]=useState('');\r\n// setText(\"new Text\");\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\"  style={{color:props.Mode==='dark'?'white':'#042743'}}>\r\n<h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" id=\"myBox\" value={text} style={{backgroundColor:props.Mode==='dark'?'grey':'white',color:props.Mode==='dark'?'white':'#042743'}} onChange={handleOnChange} rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to uppercase</button>            \r\n<button className=\"btn btn-primary mx-2\" onClick={handleLoClick} >Convert to lowercase</button>            \r\n<button className=\"btn btn-primary mx-2\" onClick={handleClearClick} >clear text</button>            \r\n<button className=\"btn btn-primary mx-2\" onClick={handleCopy} >copy text</button>            \r\n<button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces} >Remove extra spaces</button>            \r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.Mode==='dark'?'white':'#042743'}}>\r\n              <h1>Your text summary</h1>\r\n              <p>{text.split(\" \").length} words and {text.length} character</p>\r\n              <p>{0.008* text.split(\" \").length }minutes to read</p>\r\n              <h2>preview</h2>\r\n              <p>{text.length>0?text:\"enter your text first\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower =word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n <strong>{capitalize (props.alert.type)}</strong>: {props.alert.msg}\r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n  \n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const  [Mode, setMode] = useState('light');  // it tells us weather dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert =(message,type)=>{\n   setAlert({\n     msg:message,\n     type:type\n   })\n   setTimeout(()=>{\n     setAlert(null);\n   },1500);\n\n  }\n\n\n\n\n  const toggleMode =()=>{\n    if(Mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"dark mode is enabled\",\"success\");\n    document.title='cyphon-tech-dark'; // changing title of website \n    // setInterval(() => {\n    //   document.title='cyphon-tech-dangerous';\n    // }, 2000);\n    // setInterval(() => {                                             // this is used to attract the people near you\n    //   document.title='cyphon-tech-virus';\n    // }, 1500);\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode is enabled\",\"success\");\n      document.title='cyphon-tech-light';\n    }\n  }\n  return (\n    <>\n\n\n {/* <Router> */}\n  <Navbar title=\"Cyphon-Tech\" aboutText=\"About\" Mode={Mode} toggleMode={toggleMode}/>\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n           \n          {/* <Route  path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"enter text\"Mode={Mode}/>\n            {/* <About/> */}\n          {/* </Route>\n        </Switch> */}\n        \n  </div>\n        {/* </Router> */}\n \n\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}